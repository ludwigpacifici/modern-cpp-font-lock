bool
char
char8_t
char16_t
char32_t
double
float
int
long
short
signed
unsigned
void
wchar_t

false
nullptr
true

#define
#defined
#elif
#else
#endif
#error
#if
#ifdef
#ifndef
#include
#line
#pragma STDC CX_LIMITED_RANGE
#pragma STDC FENV_ACCESS
#pragma STDC FP_CONTRACT
#pragma once
#pragma pack
#pragma
#undef
_Pragma
__DATE__
__FILE__
__LINE__
__STDCPP_STRICT_POINTER_SAFETY__
__STDCPP_THREADS__
__STDC_HOSTED__
__STDC_ISO_10646__
__STDC_MB_MIGHT_NEQ_WC__
__STDC_VERSION__
__STDC__
__TIME__
__VA_AR_GS__
__cplusplus
__has_include
__has_cpp_attribute

alignas
alignof
and
and_eq
asm
atomic_cancel
atomic_commit
atomic_noexcept
auto
bitand
bitor
break
case
catch
class
compl
concept
const
const_cast
consteval
constexpr
continue
decltype
default
delete
do
dynamic_cast
else
enum
explicit
export
extern
final
for
friend
goto
if
import
inline
module
mutable
namespace
new
noexcept
not
not_eq
operator
or
or_eq
override
private
protected
public
register
reinterpret_cast
requires
return
sizeof
sizeof...
static
static_assert
static_cast
struct
switch
synchronized
template
this
thread_local
throw
audit
axiom
transaction_safe
transaction_safe_dynamic
try
typedef
typeid
typename
union
using
virtual
volatile
while
xor
xor_eq

[[carries_dependency]]
[[deprecated]]
[[deprecated("abc")]]
[[fallthrough]]
[[maybe_unused]]
[[nodiscard]]
[[noreturn]]
[[optimize_for_synchronized]]
[[likely]]
[[unlikely]]
[[no_unique_address]]
[[expects]]
[[ensures]]
[[assert]]

...

00
01
03
02
03
04
05
06
07

0B101 + 01234567L;

0b10Ul + 0B1 == 123;

0x12A= 0X2A

0b1;
0b1u;
0b1ul;
0b1ull;
0b1llu;
0b1U;
0b1LU;
0x1
0x2
int d = 42;
int o = 052;
int x = 0x2a;
int X = 0X2A;
int b = 0b101010;
unsigned long long l1 = 18446744073709550592ull;
unsigned long long l2 = 18446744073709550592llu;
unsigned long long l3 = 18446744073709550592uLL;
unsigned long long l4 = 18'446'744'073'709'550'592LLU;
1U
0xDeAdBaBeU == 0XdeadBABEu

abool
achar
achar16_t
achar32_t
adouble
afloat
aint
along
ashort
asigned
aunsigned
avoid
awchar_t
boola
chara
char16_ta
char32_ta
doublea
floata
inta
longa
shorta
signeda
unsigneda
voida
wchar_ta

afalse
anullptr
atrue
falsea
nullptra
truea

a#define
a#defined
a#elif
a#else
a#endif
a#error
a#if
a#ifdef
a#ifndef
a#include
a#line
a#pragma STDC CX_LIMITED_RANGE
a#pragma STDC FENV_ACCESS
a#pragma STDC FP_CONTRACT
a#pragma once
a#pragma pack
a#pragma
a#undef
a_Pragma
a__DATE__
a__FILE__
a__LINE__
a__STDCPP_STRICT_POINTER_SAFETY__
a__STDCPP_THREADS__
a__STDC_HOSTED__
a__STDC_ISO_10646__
a__STDC_MB_MIGHT_NEQ_WC__
a__STDC_VERSION__
a__STDC__
a__TIME__
a__VA_AR_GS__
a__cplusplus
a__has_include
#definea
#defineda
#elifa
#elsea
#endifa
#errora
#ifa
#ifdefa
#ifndefa
#includea
#linea
#pragma STDC CX_LIMITED_RANGEa
#pragma STDC FENV_ACCESSa
#pragma STDC FP_CONTRACTa
#pragma oncea
#pragma packa
#pragmaa
#undefa
_Pragmaa
__DATE__a
__FILE__a
__LINE__a
__STDCPP_STRICT_POINTER_SAFETY__a
__STDCPP_THREADS__a
__STDC_HOSTED__a
__STDC_ISO_10646__a
__STDC_MB_MIGHT_NEQ_WC__a
__STDC_VERSION__a
__STDC__a
__TIME__a
__VA_AR_GS__a
__cplusplusa
__has_includea

aalignas
aalignof
aand
aand_eq
aasm
aatomic_cancel
aatomic_commit
aatomic_noexcept
aauto
abitand
abitor
abreak
acase
acatch
aclass
acompl
aconcept
aconst
aconst_cast
aconstexpr
aconsteval
acontinue
adecltype
adefault
adelete
ado
adynamic_cast
aelse
aenum
aexplicit
aexport
aextern
afinal
afor
afriend
agoto
aif
aimport
ainline
amodule
amutable
anamespace
anew
anoexcept
anot
anot_eq
aoperator
aor
aor_eq
aoverride
aprivate
aprotected
apublic
aregister
areinterpret_cast
arequires
areturn
asizeof
asizeof...
astatic
astatic_assert
astatic_cast
astruct
aswitch
asynchronized
atemplate
athis
athread_local
athrow
aaudit
aaxiom
atransaction_safe
atransaction_safe_dynamic
atry
atypedef
atypeid
atypename
aunion
ausing
avirtual
avolatile
awhile
axor
axor_eq
alignasa
alignofa
anda
and_eqa
asma
atomic_cancela
atomic_commita
atomic_noexcepta
autoa
bitanda
bitora
breaka
casea
catcha
classa
compla
concepta
consta
const_casta
constexpra
constevala
continuea
decltypea
defaulta
deletea
doa
dynamic_casta
elsea
enuma
explicita
exporta
externa
finala
fora
frienda
gotoa
ifa
importa
inlinea
modulea
mutablea
namespacea
newa
noexcepta
nota
not_eqa
operatora
ora
or_eqa
overridea
privatea
protecteda
publica
registera
reinterpret_casta
requiresa
returna
sizeofa
sizeof...a
statica
static_asserta
static_casta
structa
switcha
synchronizeda
templatea
thisa
thread_locala
throwa
audita
axioma
transaction_safea
transaction_safe_dynamica
trya
typedefa
typeida
typenamea
uniona
usinga
virtuala
volatilea
whilea
xora
xor_eqa

carries_dependency]]
deprecated]]
fallthrough]]
maybe_unused]]
nodiscard]]
noreturn]]
optimize_for_synchronized]]
likely]]
unlikely]]
no_unique_address]]
expects]]
ensures]]
assert]]

[[carries_dependency
[[deprecated
[[fallthrough
[[maybe_unused
[[nodiscard
[[noreturn
[[optimize_for_synchronized
[[likely
[[unlikely
[[no_unique_address
[[expects
[[ensures
[[assert

08
09
019
10b1
10xa
01234567889
0x3Ulll
