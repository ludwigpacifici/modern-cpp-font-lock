«t:bool»
«t:char»
«t:char8_t»
«t:char16_t»
«t:char32_t»
«t:double»
«t:float»
«t:int»
«t:long»
«t:short»
«t:signed»
«t:unsigned»
«t:void»
«t:wchar_t»

«c:false»
«c:nullptr»
«c:true»

«p:#define»
«p:#defined»
«p:#elif»
«p:#else»
«p:#endif»
«p:#error»
«p:#if»
«p:#ifdef»
«p:#ifndef»
«p:#include»
«p:#line»
«p:#pragma STDC CX_LIMITED_RANGE»
«p:#pragma STDC FENV_ACCESS»
«p:#pragma STDC FP_CONTRACT»
«p:#pragma once»
«p:#pragma pack»
«p:#pragma»
«p:#undef»
«p:_Pragma»
«p:__DATE__»
«p:__FILE__»
«p:__LINE__»
«p:__STDCPP_STRICT_POINTER_SAFETY__»
«p:__STDCPP_THREADS__»
«p:__STDC_HOSTED__»
«p:__STDC_ISO_10646__»
«p:__STDC_MB_MIGHT_NEQ_WC__»
«p:__STDC_VERSION__»
«p:__STDC__»
«p:__TIME__»
«p:__VA_ARGS__»
«p:__VA_OPT__»
«p:__cplusplus»
«p:__has_include»
«p:__has_cpp_attribute»

«k:alignas»
«k:alignof»
«k:and»
«k:and_eq»
«k:asm»
«k:atomic_cancel»
«k:atomic_commit»
«k:atomic_noexcept»
«k:auto»
«k:bitand»
«k:bitor»
«k:break»
«k:case»
«k:catch»
«k:class»
«k:compl»
«k:concept»
«k:const»
«k:const_cast»
«k:consteval»
«k:constexpr»
«k:constinit»
«k:continue»
«k:decltype»
«k:default»
«k:delete»
«k:do»
«k:dynamic_cast»
«k:else»
«k:enum»
«k:explicit»
«k:export»
«k:extern»
«k:final»
«k:for»
«k:friend»
«k:goto»
«k:if»
«k:import»
«k:inline»
«k:module»
«k:mutable»
«k:namespace»
«k:new»
«k:noexcept»
«k:not»
«k:not_eq»
«k:operator»
«k:or»
«k:or_eq»
«k:override»
«k:private»
«k:protected»
«k:public»
«k:register»
«k:reinterpret_cast»
«k:requires»
«k:return»
«k:sizeof»
«k:sizeof»«f:...»
«k:static»
«k:static_assert»
«k:static_cast»
«k:struct»
«k:switch»
«k:synchronized»
«k:template»
«k:this»
«k:thread_local»
«k:throw»
«k:audit»
«k:axiom»
«k:transaction_safe»
«k:transaction_safe_dynamic»
«k:try»
«k:typedef»
«k:typeid»
«k:typename»
«k:union»
«k:using»
«k:virtual»
«k:volatile»
«k:while»
«k:xor»
«k:xor_eq»

[[«c:carries_dependency»]]
[[«c:deprecated»]]
[[«c:deprecated»(«s:"abc"»)]]
[[«c:fallthrough»]]
[[«c:maybe_unused»]]
[[«c:nodiscard»]]
[[«c:noreturn»]]
[[«c:optimize_for_synchronized»]]
[[«c:likely»]]
[[«c:unlikely»]]
[[«c:no_unique_address»]]
[[«c:expects»]]
[[«c:ensures»]]
[[«c:assert»]]

«f:...»

«k:0»«c:0»
«k:0»«c:1»
«k:0»«c:3»
«k:0»«c:2»
«k:0»«c:3»
«k:0»«c:4»
«k:0»«c:5»
«k:0»«c:6»
«k:0»«c:7»

«k:0B»«c:101» + «k:0»«c:1234567»«k:L»;

«k:0b»«c:10»«k:Ul» + «k:0B»«c:1» == 123;

«k:0x»«c:12A»= «k:0X»«c:2A»

«k:0b»«c:1»;
«k:0b»«c:1»«k:u»;
«k:0b»«c:1»«k:ul»;
«k:0b»«c:1»«k:ull»;
«k:0b»«c:1»«k:llu»;
«k:0b»«c:1»«k:U»;
«k:0b»«c:1»«k:LU»;
«k:0x»«c:1»
«k:0x»«c:2»
«t:int» d = 42;
«t:int» o = «k:0»«c:52»;
«t:int» x = «k:0x»«c:2a»;
«t:int» X = «k:0X»«c:2A»;
«t:int» b = «k:0b»«c:101010»;
«t:unsigned» «t:long» «t:long» l1 = «c:18446744073709550592»«k:ull»;
«t:unsigned» «t:long» «t:long» l2 = «c:18446744073709550592»«k:llu»;
«t:unsigned» «t:long» «t:long» l3 = «c:18446744073709550592»«k:uLL»;
«t:unsigned» «t:long» «t:long» l4 = «c:18'446'744'073'709'550'592»«k:LLU»;
«c:1»«k:U»
«k:0x»«c:DeAdBaBe»«k:U» == «k:0X»«c:deadBABE»«k:u»

abool
achar
achar16_t
achar32_t
adouble
afloat
aint
along
ashort
asigned
aunsigned
avoid
awchar_t
boola
chara
char16_ta
char32_ta
doublea
floata
inta
longa
shorta
signeda
unsigneda
voida
wchar_ta

afalse
anullptr
atrue
falsea
nullptra
truea

a«p:#define»
a«p:#defined»
a«p:#elif»
a«p:#else»
a«p:#endif»
a«p:#error»
a«p:#if»
a«p:#ifdef»
a«p:#ifndef»
a«p:#include»
a«p:#line»
a«p:#pragma STDC CX_LIMITED_RANGE»
a«p:#pragma STDC FENV_ACCESS»
a«p:#pragma STDC FP_CONTRACT»
a«p:#pragma once»
a«p:#pragma pack»
a«p:#pragma»
a«p:#undef»
a_Pragma
a__DATE__
a__FILE__
a__LINE__
a__STDCPP_STRICT_POINTER_SAFETY__
a__STDCPP_THREADS__
a__STDC_HOSTED__
a__STDC_ISO_10646__
a__STDC_MB_MIGHT_NEQ_WC__
a__STDC_VERSION__
a__STDC__
a__TIME__
a__VA_ARGS__
a__VA_OPT__
a__cplusplus
a__has_include
«p:#define»a
«p:#defined»a
«p:#elif»a
«p:#else»a
«p:#endif»a
«p:#error»a
«p:#if»a
«p:#ifdef»a
«p:#ifndef»a
«p:#include»a
«p:#line»a
«p:#pragma STDC CX_LIMITED_RANGE»a
«p:#pragma STDC FENV_ACCESS»a
«p:#pragma STDC FP_CONTRACT»a
«p:#pragma once»a
«p:#pragma pack»a
«p:#pragma»a
«p:#undef»a
_Pragmaa
__DATE__a
__FILE__a
__LINE__a
__STDCPP_STRICT_POINTER_SAFETY__a
__STDCPP_THREADS__a
__STDC_HOSTED__a
__STDC_ISO_10646__a
__STDC_MB_MIGHT_NEQ_WC__a
__STDC_VERSION__a
__STDC__a
__TIME__a
__VA_ARGS__a
__cplusplusa
__has_includea

aalignas
aalignof
aand
aand_eq
aasm
aatomic_cancel
aatomic_commit
aatomic_«k:noexcept»
aauto
abitand
abitor
abreak
acase
acatch
aclass
acompl
aconcept
aconst
aconst_cast
aconstexpr
aconsteval
aconstinit
acontinue
adecltype
adefault
adelete
ado
adynamic_cast
aelse
aenum
aexplicit
aexport
aextern
afinal
afor
afriend
agoto
aif
aimport
ainline
amodule
amutable
anamespace
anew
anoexcept
anot
anot_eq
aoperator
aor
aor_eq
aoverride
aprivate
aprotected
apublic
aregister
areinterpret_cast
arequires
areturn
asizeof
asizeof«f:...»
astatic
astatic_assert
astatic_cast
astruct
aswitch
asynchronized
atemplate
athis
athread_local
athrow
aaudit
aaxiom
atransaction_safe
atransaction_safe_dynamic
atry
atypedef
atypeid
atypename
aunion
ausing
avirtual
avolatile
awhile
axor
axor_eq
alignasa
alignofa
anda
«k:and»_eqa
asma
atomic_cancela
atomic_commita
atomic_noexcepta
autoa
bitanda
bitora
breaka
casea
catcha
classa
compla
concepta
consta
«k:const»_casta
constexpra
constevala
continuea
decltypea
defaulta
deletea
doa
dynamic_casta
elsea
enuma
explicita
exporta
externa
finala
fora
frienda
gotoa
ifa
importa
inlinea
modulea
mutablea
namespacea
newa
noexcepta
nota
«k:not»_eqa
operatora
ora
«k:or»_eqa
overridea
privatea
protecteda
publica
registera
reinterpret_casta
requiresa
returna
sizeofa
«k:sizeof»«f:...»a
statica
«k:static»_asserta
«k:static»_casta
structa
switcha
synchronizeda
templatea
thisa
thread_locala
throwa
audita
axioma
transaction_safea
«k:transaction_safe»_dynamica
trya
typedefa
typeida
typenamea
uniona
usinga
virtuala
volatilea
whilea
xora
«k:xor»_eqa

carries_dependency]]
deprecated]]
fallthrough]]
maybe_unused]]
nodiscard]]
noreturn]]
optimize_«k:for»_«k:synchronized»]]
likely]]
unlikely]]
no_unique_address]]
expects]]
ensures]]
assert]]

[[carries_dependency
[[deprecated
[[fallthrough
[[maybe_unused
[[nodiscard
[[noreturn
[[optimize_«k:for»_«k:synchronized»
[[likely
[[unlikely
[[no_unique_address
[[expects
[[ensures
[[assert

08
09
«k:0»«c:1»9
10b1
10xa
«k:0»«c:1234567»889
«k:0x»«c:3»«k:Ull»l
